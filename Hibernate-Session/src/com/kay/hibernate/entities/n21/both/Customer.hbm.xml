<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- Generated 2019-7-9 10:26:51 by Hibernate Tools 3.5.0.Final -->
<hibernate-mapping package="com.kay.hibernate.entities.n21.both">
    <class name="Customer" table="CUSTOMERS">
        <id name="customerId" type="java.lang.Integer">
            <column name="CUSTOMER_ID" />
            <generator class="native" />
        </id>
        <property name="customerName" type="java.lang.String">
            <column name="CUSTOMER_NAME" />
        </property>
        <!-- 映射 1 对多的那个集合属性 -->
        <!-- inverse="true" 放弃关联关系的维护 -->
        <!-- set: 映射 set 类型的属性， table: set 中的元素对应的记录放在哪一个数据表中，该值需要和多对一的多的那个表的名字一致 -->
        <!-- inverse:指定由哪一方来维护关联关系，通常设置为true，以指定由多的一方来维护管关联关系 -->
        <!-- cascade 设定级联操作 -->
        <!-- 
        	实际开发中不建议使用级联保存的操作 cascade="save-update" 建议使用手工的方式来处理
        	也就是说：Customer 与 Order1 在保存的是后只需要保存session.save(customer)即可，不用再对order1进行保存，order1就会被保存	
         -->
         <!-- set 标签指定排序        降序     order-by="ORDER_NAME DESC"  再查询时对集合元素进行排序 ，order-by 中使用的是表的字段名，而不是持久化的属性名-->
       	<set name="orders" table="ORDER1" inverse="true" order-by="ORDER_NAME DESC"><!-- 该标签可以指定cascade="delete"、delete-orphan 、save-update -->
       		<!-- 执行多的表中的外键列的名字 -->
       		<key column="CUSTOMER_ID"></key>
       		<!-- 指定映射类型 -->
       		<one-to-many class="Order1"/>
       	</set>
    </class>
</hibernate-mapping>
